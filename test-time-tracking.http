### Time Tracking API Testing
### This file tests the complete time tracking implementation
### Use the JWT token from login to test these endpoints

### Step 1: Login as Employee to get JWT token
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "employee@mercor.com",
  "password": "Employee@123"
}

### Step 2: Get current window status (should be no active session initially)
GET http://localhost:3000/api/internal/window/current
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 3: Get employee assignments (projects and tasks available to work on)
GET http://localhost:3000/api/internal/employee/assignments
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 4: Start a time tracking session
POST http://localhost:3000/api/internal/window/start
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "projectId": "w585nlssgh_1rm5",
  "taskId": "wtk6de9-iohuwwk",
  "type": "manual",
  "note": "Starting work on API testing",
  "computer": "Test Computer",
  "domain": "test.local",
  "hwid": "test-hardware-id-12345",
  "os": "darwin",
  "osVersion": "14.1.0",
  "timezoneOffset": -28800000
}

### Step 5: Check current window status (should show active session)
GET http://localhost:3000/api/internal/window/current
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 6: Stop the time tracking session
PUT http://localhost:3000/api/internal/window/stop/WINDOW_ID_FROM_START_RESPONSE
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "note": "Completed API testing work",
  "deletedScreenshots": 0
}

### Step 7: Verify session was stopped
GET http://localhost:3000/api/internal/window/current
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 8: Query time tracking windows (Analytics API - Insightful compatible)
GET http://localhost:3000/api/v1/analytics/window?start=1592498100575&end=2574195046418
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 9: Query project time aggregation (Analytics API - Insightful compatible)
GET http://localhost:3000/api/v1/analytics/project-time?start=1592498100575&end=2574195046418
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Step 10: Test with Admin JWT for full access to analytics
POST http://localhost:3000/api/auth/login
Content-Type: application/json

{
  "email": "admin@mercor.com",
  "password": "Admin@123"
}

### Step 11: Admin query - all employees' time tracking windows
GET http://localhost:3000/api/v1/analytics/window?start=1592498100575&end=2574195046418
Authorization: Bearer ADMIN_JWT_TOKEN_HERE

### Step 12: Admin query - all projects' time aggregation
GET http://localhost:3000/api/v1/analytics/project-time?start=1592498100575&end=2574195046418
Authorization: Bearer ADMIN_JWT_TOKEN_HERE

### Step 13: Admin query with filters - specific employee
GET http://localhost:3000/api/v1/analytics/window?start=1592498100575&end=2574195046418&employeeId=EMPLOYEE_ID_HERE
Authorization: Bearer ADMIN_JWT_TOKEN_HERE

### Step 14: Admin query with filters - specific project
GET http://localhost:3000/api/v1/analytics/project-time?start=1592498100575&end=2574195046418&projectId=PROJECT_ID_HERE
Authorization: Bearer ADMIN_JWT_TOKEN_HERE

### Error Cases Testing ###

### Test 1: Try to start session without required fields
POST http://localhost:3000/api/internal/window/start
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "projectId": "w585nlssgh_1rm5"
}

### Test 2: Try to start session with invalid project ID
POST http://localhost:3000/api/internal/window/start
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "projectId": "invalid-id",
  "taskId": "wtk6de9-iohuwwk",
  "computer": "Test Computer",
  "hwid": "test-hardware-id-12345",
  "os": "darwin",
  "osVersion": "14.1.0"
}

### Test 3: Try to stop non-existent window
PUT http://localhost:3000/api/internal/window/stop/non-existent-id
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{}

### Test 4: Try to access analytics without auth
GET http://localhost:3000/api/v1/analytics/window?start=1592498100575&end=2574195046418

### Test 5: Try to access analytics with missing required params
GET http://localhost:3000/api/v1/analytics/window
Authorization: Bearer YOUR_JWT_TOKEN_HERE

### Test 6: Try to start session while one is already active (should fail)
# First start a session
POST http://localhost:3000/api/internal/window/start
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "projectId": "w585nlssgh_1rm5",
  "taskId": "wtk6de9-iohuwwk",
  "computer": "Test Computer",
  "hwid": "test-hardware-id-12345",
  "os": "darwin",
  "osVersion": "14.1.0"
}

# Then try to start another (should return conflict error)
POST http://localhost:3000/api/internal/window/start
Authorization: Bearer YOUR_JWT_TOKEN_HERE
Content-Type: application/json

{
  "projectId": "w585nlssgh_1rm5",
  "taskId": "wtk6de9-iohuwwk",
  "computer": "Test Computer",
  "hwid": "test-hardware-id-12345",
  "os": "darwin",
  "osVersion": "14.1.0"
}

### API Token Testing (Admin functionality) ###

### Test API Token access to analytics
GET http://localhost:3000/api/v1/analytics/window?start=1592498100575&end=2574195046418
X-API-Key: test_api_token_12345

### Test API Token cannot start time tracking (should fail)
POST http://localhost:3000/api/internal/window/start
X-API-Key: test_api_token_12345
Content-Type: application/json

{
  "projectId": "w585nlssgh_1rm5",
  "taskId": "wtk6de9-iohuwwk",
  "computer": "Test Computer",
  "hwid": "test-hardware-id-12345",
  "os": "darwin",
  "osVersion": "14.1.0"
}
